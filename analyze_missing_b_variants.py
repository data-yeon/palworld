import pandas as pd
import json
import re

def analyze_current_b_variants():
    """ÌòÑÏû¨ CSVÏùò B variants Î∂ÑÏÑù"""
    
    # ÌòÑÏû¨ Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    df = pd.read_csv('complete_1_to_115_pals.csv')
    
    # B variants Ï∞æÍ∏∞ (idÍ∞Ä BÎ°ú ÎÅùÎÇòÎäî Í≤ÉÎì§)
    current_b_variants = []
    
    for _, row in df.iterrows():
        pal_id = str(row['id'])
        if 'B' in pal_id or '110B' in pal_id:
            current_b_variants.append({
                'id': row['id'],
                'name_kor': row['name_kor'],
                'elements': row['elements']
            })
    
    print(f"üìä ÌòÑÏû¨ CSVÏùò B Variants Î∂ÑÏÑù:")
    print(f"  - Ï†ÑÏ≤¥ Ìå∞ Ïàò: {len(df)}")
    print(f"  - ÌòÑÏû¨ B Variants Ïàò: {len(current_b_variants)}")
    
    print(f"\nüîç ÌòÑÏû¨ Î≥¥Ïú†Ìïú B Variants:")
    for variant in current_b_variants:
        print(f"  - {variant['id']}: {variant['name_kor']} ({variant['elements']})")
    
    return current_b_variants

def get_expected_b_variants():
    """paldb.ccÏóêÏÑú ÌôïÏù∏Îêú Ïã§Ï†ú B variants Î™©Î°ù"""
    
    # Ïã§Ï†ú paldb.ccÏóêÏÑú ÌôïÏù∏Îêú B variantsÎì§ (Ïù¥Ï†Ñ ÌÅ¨Î°§ÎßÅ Í≤∞Í≥º Í∏∞Î∞ò)
    expected_b_variants = [
        {'id': '5B', 'name_kor': 'ÏïÑÏù¥Ìò∏', 'name_eng': 'Foxcicle', 'url_name': 'Kitsunebi_Ice'},
        {'id': '6B', 'name_kor': 'Ï†ÅÎ∂ÄÎ¶¨', 'name_eng': 'Surfent Ignis', 'url_name': 'BluePlatypus_Fire'},
        {'id': '10B', 'name_kor': 'ÎéÖÌÇ§', 'name_eng': 'Pengullet Spark', 'url_name': 'Penguin_Electric'},
        {'id': '11B', 'name_kor': 'Ìé≠ÌÇ§Îìú', 'name_eng': 'Penking Spark', 'url_name': 'CaptainPenguin_Electric'},
        {'id': '12B', 'name_kor': 'ÏΩîÏπòÎèÑÏπò', 'name_eng': 'Bristla Ignis', 'url_name': 'Hedgehog_Ice'},
        {'id': '13B', 'name_kor': 'Ï¥àÎ°±Ïù¥', 'name_eng': 'Vaelet', 'url_name': 'PlantSlime_Flower'},
        {'id': '21B', 'name_kor': 'Í∞àÎùºÌã∞Ìä∏', 'name_eng': 'Lunaris Ignis', 'url_name': 'NightFox_Ice'},
        {'id': '24B', 'name_kor': 'Ïπ†ÌÖåÌä∏', 'name_eng': 'Katress Spark', 'url_name': 'Bastet_Electric'},
        {'id': '26B', 'name_kor': 'ÏãúÎ°úÏö∏ÌîÑ', 'name_eng': 'Chillet', 'url_name': 'Garm_Ice'},
        {'id': '27B', 'name_kor': 'ÏïåÎ°ùÏÉàB', 'name_eng': 'Sparkit', 'url_name': 'ColorfulBird_Electric'},
        {'id': '30B', 'name_kor': 'Ïç¨Îç∞Ïö∞', 'name_eng': 'Lyleen Spark', 'url_name': 'LittleBriarRose_Electric'},
        {'id': '32B', 'name_kor': 'Í≥†Î¶¥Î∏îÎûô', 'name_eng': 'Gorirat Terra', 'url_name': 'GorillaBeast_Dark'},
        {'id': '34B', 'name_kor': 'ÏÑ§ÌÉïÏñë', 'name_eng': 'Sweepa Spark', 'url_name': 'SweetsSheep_Electric'},
        {'id': '37B', 'name_kor': 'ÌéòÏñ¥Î¶¨', 'name_eng': 'Eikthyrdeer Terra', 'url_name': 'Deer_Dark'},
        {'id': '44B', 'name_kor': 'ÏΩîÎ•¥ÌÅ¨Î°úÏö∞', 'name_eng': 'Cawgnito Cryst', 'url_name': 'Cawgnito_Ice'},
        {'id': '45B', 'name_kor': 'ÏïÑÏù¥Ïä§Ìë∏ÌÅ¨', 'name_eng': 'Leezpunk Cryst', 'url_name': 'Leezpunk_Ice'},
        {'id': '55B', 'name_kor': 'Ï≤úÎèÑÎáΩ', 'name_eng': 'Elphidran Aqua', 'url_name': 'WeaselDragon_Pure'},
        {'id': '64B', 'name_kor': 'Ï∞åÎ•¥Î•¥ÎîîÎÖ∏', 'name_eng': 'Dinossom Lux', 'url_name': 'FlowerDinosaur_Electric'},
        {'id': '65B', 'name_kor': 'Ïä§ÎÑàÌéúÌä∏', 'name_eng': 'Surfent Terra', 'url_name': 'Serpent_Ground'},
        {'id': '71B', 'name_kor': 'ÏãúÎ°úÏπ¥Î∞îÎÑ§', 'name_eng': 'Suzaku Aqua', 'url_name': 'BirdDragon_Ice'},
        {'id': '72B', 'name_kor': 'Ïñ¥Îë†Î¨¥ÏÇ¨', 'name_eng': 'Bushi', 'url_name': 'Ronin_Dark'},
        {'id': '75B', 'name_kor': 'Ï∫êÌã∞ÏúÑÏûêÎìú', 'name_eng': 'Wixen', 'url_name': 'CatMage_Electric'},
        {'id': '76B', 'name_kor': 'ÏòÅÎßàÌò∏', 'name_eng': 'Blazamut Ryu', 'url_name': 'FoxMage_Dark'},
        {'id': '80B', 'name_kor': 'Ïã§Ìã∞ÏïÑ', 'name_eng': 'Silvera', 'url_name': 'FairyDragon_Dark'},
        {'id': '84B', 'name_kor': 'ÎßåÌã∞ÏΩîÏñ¥', 'name_eng': 'Manticore Terra', 'url_name': 'Manticore_Dark'},
        {'id': '85B', 'name_kor': 'ÌïëÌîºÎ°±', 'name_eng': 'Relaxaurus Lux', 'url_name': 'LazyDragon_Electric'},
        {'id': '86B', 'name_kor': 'Ïä§ÌîÑÎùºÎèà', 'name_eng': 'Celaray', 'url_name': 'SakuraSaurus_Water'},
        {'id': '88B', 'name_kor': 'ÌîÑÎ°úÏä§Ïπ¥ÎÖ∏', 'name_eng': 'Volcanus', 'url_name': 'VolcanicMonster_Ice'},
        {'id': '95B', 'name_kor': 'Ìè¨Î†àÏä§ÌÇ§', 'name_eng': 'Quivern Botan', 'url_name': 'SkyDragon_Grass'},
        {'id': '96B', 'name_kor': 'ÎßàÍ∑∏Îßà ÎìúÎùºÍ≥†', 'name_eng': 'Blazamut', 'url_name': 'KingBahamut_Fire'},
        {'id': '97B', 'name_kor': 'ÎùºÏù¥Í∞ÄÎ£®Îã§', 'name_eng': 'Orserk', 'url_name': 'HadesBird_Electric'},
        {'id': '99B', 'name_kor': 'Í≥®Îìú Ïä§ÌåÖ', 'name_eng': 'Menasting Terra', 'url_name': 'DarkScorpion_Ground'},
        {'id': '104B', 'name_kor': 'Î£®ÎÇòÌÄ∏', 'name_eng': 'Lyleen Noct', 'url_name': 'LilyQueen_Dark'},
        {'id': '110B', 'name_kor': 'Í∑∏Î†àÏù¥ÏÑÄÎèÑÏö∞', 'name_eng': 'Frostallion Noct', 'url_name': 'IceHorse_Dark'},
        {'id': '112B', 'name_kor': 'Î≤®ÎùºÎ£®Ï£º', 'name_eng': 'Bellanoir Libero', 'url_name': 'NightLady_Libero'}
    ]
    
    print(f"\nüìã ÏòàÏÉÅÎêòÎäî Ï†ÑÏ≤¥ B Variants Ïàò: {len(expected_b_variants)}")
    
    return expected_b_variants

def find_missing_b_variants():
    """ÎàÑÎùΩÎêú B variants Ï∞æÍ∏∞"""
    
    current = analyze_current_b_variants()
    expected = get_expected_b_variants()
    
    # ÌòÑÏû¨ Í∞ÄÏßÄÍ≥† ÏûàÎäî IDÎì§
    current_ids = {variant['id'] for variant in current}
    
    # ÎàÑÎùΩÎêú B variants Ï∞æÍ∏∞
    missing = []
    for variant in expected:
        if variant['id'] not in current_ids:
            missing.append(variant)
    
    print(f"\n‚ùå ÎàÑÎùΩÎêú B Variants ({len(missing)}Í∞ú):")
    for variant in missing:
        print(f"  - {variant['id']}: {variant['name_kor']} ({variant['name_eng']}) -> {variant['url_name']}")
    
    print(f"\n‚úÖ ÌòÑÏû¨ Î≥¥Ïú†Ìïú B Variants ({len(current)}Í∞ú):")
    for variant in current:
        print(f"  - {variant['id']}: {variant['name_kor']}")
    
    print(f"\nüìä ÏôÑÏÑ±ÎèÑ: {len(current)}/{len(expected)} ({len(current)/len(expected)*100:.1f}%)")
    
    return missing

def main():
    print("üîç Analyzing B Variants in Current Dataset...")
    missing_variants = find_missing_b_variants()
    
    # ÎàÑÎùΩÎêú ÏïÑÏ¢ÖÎì§ÏùÑ Ïö∞ÏÑ†ÏàúÏúÑÎ≥ÑÎ°ú Ï†ïÎ†¨ (ID ÏàúÏÑúÎåÄÎ°ú)
    missing_variants.sort(key=lambda x: int(re.findall(r'\d+', x['id'])[0]))
    
    print(f"\nüéØ ÌÅ¨Î°§ÎßÅ ÎåÄÏÉÅ B Variants (Ïö∞ÏÑ†ÏàúÏúÑ Ïàú):")
    for i, variant in enumerate(missing_variants[:10], 1):
        print(f"  {i:2d}. {variant['id']:3s}: {variant['name_kor']:8s} -> https://paldb.cc/ko/{variant['url_name']}")
    
    if len(missing_variants) > 10:
        print(f"     ... Í∑∏Î¶¨Í≥† {len(missing_variants)-10}Í∞ú Îçî")

if __name__ == "__main__":
    main() 